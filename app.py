# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13PbICTVYOkVVlaTNXcngUd0FJAs35DR7
"""

import streamlit as st
import numpy as np
import joblib

# Load the saved model
model = joblib.load('tensile_strength_predictor.pkl')  # Ensure this path is correct

# Title and description
st.title("Steel Tensile Strength Predictor")
st.write("Enter the steel composition values to predict the tensile strength.")

# Input fields for steel composition
carbon = st.number_input("Carbon (%)", min_value=0.0, max_value=2.0, step=0.01)
manganese = st.number_input("Manganese (%)", min_value=0.0, max_value=3.0, step=0.01)
silicon = st.number_input("Silicon (%)", min_value=0.0, max_value=1.0, step=0.01)
phosphorus = st.number_input("Phosphorus (%)", min_value=0.0, max_value=0.1, step=0.001)
sulfur = st.number_input("Sulfur (%)", min_value=0.0, max_value=0.1, step=0.001)
chromium = st.number_input("Chromium (%)", min_value=0.0, max_value=2.0, step=0.01)
nickel = st.number_input("Nickel (%)", min_value=0.0, max_value=2.0, step=0.01)
molybdenum = st.number_input("Molybdenum (%)", min_value=0.0, max_value=1.0, step=0.01)
vanadium = st.number_input("Vanadium (%)", min_value=0.0, max_value=0.5, step=0.01)

# Predict tensile strength when user clicks the button
if st.button("Predict Tensile Strength"):
    # Arrange the input in the required format
    input_data = np.array([[carbon, manganese, silicon, phosphorus, sulfur,
                            chromium, nickel, molybdenum, vanadium]])

    # Predict using the loaded model
    prediction = model.predict(input_data)

    # Display the result
    st.success(f"Predicted Tensile Strength: {prediction[0]:.2f} MPa")